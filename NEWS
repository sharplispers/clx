---  Changes in SBCL CLX 0.5.1, XXX FILL THIS IN XXX  ---

experimental RENDER extension support (from Gilbert Baumann)
  note: the API to this is as yet unfinalized, as indeed the protocol
        and specification appear to be in flux.  Nevertheless,
        feedback is welcome to the portable-clx-devel mailing list.

Bug fixes

 * fix bugs in the image test: always draw glyphs in white on black
   (not 1 on 0 -- i.e. dark red/blue on black in 24 bit truecolour);
   don't abuse the X-HOT and Y-HOT slots for communicating persistent
   information any more.  Disable the "optimized" pixarray read/write
   routines, on the basis that the newly fixed image test reveals that
   they are broken.

Other notes

 * we use the SBCL extensions to the condition system to customize
   compiler behaviour.  As such, the system will only build without
   breaking into the debugger using the supplied .asd; the benefits of
   this are easier code sharing, as we minimize divergence within the
   clx source proper from other implementations.

 * we also use an SBCL extension to maximize efficiency: we set
   SB-EXT:*DERIVE-FUNCTION-TYPES* to true for the duration of the
   compilation of the clx library.  Should functions in CLX be
   redefined in a type-incompatible way, their callers in CLX (but not
   outside) will need to be recompiled.

---  Changes in SBCL CLX 0.5, Fri May 30 01:16:34 BST 2003  ---

XFree86-VidModeExtension extension support (courtesy of Iban Hatchondo)

OPEN-DEFAULT-DISPLAY (opens display in $DISPLAY environment variable) exported

Implement CLX MP dependencies for SBCL: HOLDING-LOCK, PROCESS-BLOCK, etc

Many bug fixes

 * asking for text extents on unchached fonts could potentially deadlock
   http://article.gmane.org/gmane.lisp.clx.devel/16

 * lots of compiler warnings, style-warnings, notes cleared up


Style and ANSI cleanups

 * Much renaming of constants from *foo* to +foo+

 *  Change old-style COMPILE LOAD EVAL to new-style :COMPILE-TOPLEVEL
     :LOAD-TOPLEVEL :EXECUTE in EVAL-WHENs.

