
Original CLX README, retained for historical information.  See README.SBCL
for more recent information

--- 
These files contain beta code, but they have been tested to some extent under
Symbolics, TI, Lucid and Franz.  The files have been given .l suffixes to keep
them within 12 characters, to keep SysV sites happy.  Please rename them with
more appropriate suffixes for your system.


For Franz systems, see exclREADME.


For Symbolics systems, first rename all the .l files to .lisp.  Then edit your
sys.translations file so that sys:x11;clx; points to this directory and put a
clx.system file in your sys:site;directory that has the form

    (si:set-system-source-file "clx" "sys:x11;clx;defsystem.lisp")

in it.   After that CLX can be compiled with the "Compile System CLX" command
and loaded with the "Load System CLX" command.



For TI systems, rename all the .l files to .lisp, and make a clx.translations
file in your sys:site; directory pointing to this directory and a
sys:site;clx.system file like the one described for symbolics systems above,
but with the defsystem file being in the clx:clx; directory.  Then CLX can be
compiled with (make-system "CLX" :compile :noconfirm) and loaded with
(make-system "CLX" :noconfirm).



For Lucid systems, you should rename all the .l files to .lisp too (This might
not be possible on SysV systems).  After loading the defsystem.l file, CLX can
be compiled with the (compile-clx) function and loaded with the
(load-clx) form.  

The ms-patch.uu file is a patch to Lucid version 2 systems.  You probably
don't need it, as you are probably running Lucid version 3 or later, but if
you are still using Lucid version 2, you need this patch.  You'll need to
uudecode it to produce the binary.



For kcl systems, after loading the defsystem.l file, CLX can be compiled with
the (compile-clx) function and loaded with the (load-clx) form.



For more information, see defsystem.l and provide.l.

